plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'com.wirlie'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name "essentialsx-releases"
        url "https://repo.essentialsx.net/releases/"
    }
    maven {
        name "papermc"
        url "https://papermc.io/repo/repository/maven-public/"
    }
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot:1.8.8-R0.1-SNAPSHOT'
    compileOnly fileTree(dir: 'external-libs', include: ['*.jar'])
    compileOnly 'net.luckperms:api:5.3'
    compileOnly 'net.essentialsx:EssentialsX:2.19.0'

    implementation "net.kyori:adventure-api:4.9.2"
    implementation "net.kyori:adventure-platform-bungeecord:4.0.0"
    implementation "net.kyori:adventure-platform-bukkit:4.0.0"
}

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

shadowJar {

    destinationDirectory = file("$rootDir/compiled")

    /*
        SpigotMC tiene la mala costumbre de buscar clases iguales en otros plugins
        antes que en el mismo plugin que está solicitando la clase. Por ejemplo, supongamos
        que el plugin A y B tienen la clase com.fuzenmc.lib.inventories.GUIMenu, pero el
        plugin A tiene la versión 0.1 y el plugin B la versión 0.2.

        Desde el plugin B tratamos de usar la clase GuiMenu con el método #setSlot() pero
        supongamos que en la versión 0.1 este método no existe (plugin A).

        En este caso, desde el plugin B tratamos de usar GuiMenu#setSlot() pero Spigot con su
        mala costumbre va y busca en el plugin A la clase GuiMenu, encuentra la clase (en el plugin A)
        e intenta usar el método #setSlot() pero oh sorpresa... la clase no tiene este método
        (ya que el plugin A tiene la versión 0.1 la cual no tiene este método).

        Para resolver estos problemas, usamos la función del plugin de Gradle shadow, en donde
        mueve un package a otro durante la compilación, de modo que no tenga el mismo package
        que otro plugin.
     */

    //API de Java
    //relocate 'com.fuzenmc.lib', 'com.wirlie.pvpup.external.fmlib'
}
